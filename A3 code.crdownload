# script to generate data files for the least squares assignment
from pylab import *
import scipy.special as sp
import numpy as np


def f(t, A, B):
    m = A * sp.jn(2, t) + B * t
    return m

def getLegend(values):
    arr = []
    i = 1
    for x in values:
        name = "sigma" + str(i) + " = " + str(x)
        arr.append(name)
        i = i + 1
    return arr

c = loadtxt("fitting.dat")
t = c[:, 0]
data = c[:, 1:]
stdev = logspace(-1, -3, 9)

# shadow plot
figure(1)
plot(t, data, label=getLegend(stdev))
plot(t, f(t, 1.05, -0.105), c='black', label='True value')
legend(bbox_to_anchor=(1.01, 1))
xlabel(r'$t$', size=20)
ylabel(r'$f(t)+n$', size=20)
title(r'Plot of the data to be fitted')
grid(True)

figure(2)
# errorbarplot
errorbar(t[::5], data[:, 0][::5], stdev[0], fmt='ro', label='errorbar')
plot(t, f(t, 1.05, -0.105), c='black', label='True value')
xlabel(r"$t$", size=20)
ylabel(r"$f(t)+n$", size=20)
title("Data points of delta=0.10 along with exact function")
grid(True)
legend()

# f(t,A,B) as M.b
x = np.array(sp.jn(2, t)).T
y = np.array(t).T
M = c_[x, y]
A = 1.05
B = -0.105
p = np.array([A, B]).T
ft = np.dot(M, p)

# if (ft == np.array(f(t,1.05,-0.105)) results in True then the vectors are equal

# mean squared error
A = linspace(0, 2, 21)
B = linspace(-0.2, 0, 21)
Epsln = zeros((21, 21))
for i in range(21):
    for j in range(21):
        m = (c[:, 1] - f(t, A[i], B[j])) ** 2
        Epsln[i, j] = m.sum() / 101

figure(3)
# contour
# levels = [0.025, 0.050, 0.075, 0.100]
cs = contour(A, B, Epsln)
scatter(1.05, -0.105)
annotate("Exact location", (1.05, -0.105))
title("Contour plot of Epsln[ij]")
xlabel(r"$A$")
ylabel(r"$B$")

figure(4)
# error plot
AB = []
for i in range(9):
    AB.append(linalg.lstsq(M, c[:, i + 1], rcond=1)[0])
AB = np.array(AB)
Ao = np.ones((9, 1)) * 1.05
Bo = np.ones((9, 1)) * (-0.105)
MS = c_[Ao, Bo]
MSer = AB - MS
MSer = absolute(MSer)

plot(stdev, MSer[:, 0], ls="--", marker=".", label="Aerr")
plot(stdev, MSer[:, 1], ls="--", marker=".", label="Berr")
title("variation of error with noice")
xlabel("Standard deviation with noice")
ylabel("MS error")
legend()

figure(5)
loglog(stdev, MSer[:, 0], marker=".", ls="", label="Aerr")
loglog(stdev, MSer[:, 1], marker=".", ls="", label="Berr")
errorbar(stdev, MSer[:,0], yerr = 0.1, fmt="ro")
errorbar(stdev, MSer[:,1], yerr=0.1,fmt="bo")
xlabel("stdevN")
ylabel("MSerror")
title("Vaiation of error with noise")
legend()
show()