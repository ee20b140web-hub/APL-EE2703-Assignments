# -*- coding: utf-8 -*-
"""Untitled6.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1HfZgantA5ox5dDJ3bkpES1NmXIDy-iIa
"""

#             Name: T.Pavan Kumar
#             Roll No.: EE20B140


#Q1
from pylab import *
import numpy as np

N = 100 # No.of divisons the each half of Antennas subjected to.
l = 0.5 # Half length of Antenna & quarter wavelength.
Im = 1.0 # current at the center of Antenna.
k = pi # wave number
dz = l/N # Length of each differential segment.
I = np.zeros(2*N+1) # Defining current vector.
z = linspace(-l,l,2*N+1) # Distance of each differential segment.
u = delete(z,[N]) # Distance of locations with unknown current value.
u = u[1:-1]
J = np.zeros(2*N-2) # current vector points at location for specified in vector u.
mu0 = 4e-7*pi # Permeability of free space
a = 0.01 # Wire Radius.

print("u")
print((u).round(2))
print("z")
print((z).round(2))


#Q2

def Matrix(): # function  defined for the computation and returning matrix M.
  M = ((1/(2*pi*a)*np.identity(2*N-2)))
  return M
#H_phi = M*J
M = Matrix()
print("M")
print(M)

#Q3

U = meshgrid(u, u)
ui = U[0]
uj = U[1]
# Ru is a vector of distances to unknown currents.
Ru = sqrt((ui-uj)**2 + ones([2*N-2,2*N-2],dtype=complex)*(a**2))

Z = meshgrid(z,z)
zi,zj = Z[0],Z[1]
# Defining Rz to compute distances including distances to known current.
Rz = sqrt((zi-zj)**2 + ones([2*N+1,2*N+1],dtype=complex)*(a**2))

RiN = delete(Rz[N],[0,2*N,N])


# P is the contribution to the vector potential caused by unknown current sources.
P = (mu0/(4*pi))*(cos(k*Ru)-(sin(k*Ru))*1j)*(dz)*(1/Ru)
# Pb is the contribution to the vector potential due to current IN.
Pb = (mu0/(4*pi))*(cos(k*RiN)-(sin(k*RiN))*1j)*(dz)*(1/RiN)


#Q4

# Matrix corresponding to unknown currents
Q = (a/mu0)*(P)*((1j)*(k/Ru)+(1/Ru**2))
# Matrix corresponding to the boundary current
Qb = (a/mu0)*(Pb)*((1j)*(k/RiN)+(1/RiN**2))

print("Q")
print((Q).round(2))
print("Qb")
print((Qb).round(2))

#Q5
J = inv(M-Q)@Qb*Im
#calculated currents
Icallist = [0]+J[:N-1].tolist()+[Im]+J[N-1:].tolist()+ [0]
Ical = array(Icallist)

#assumed currents
Iasm = Im*sin(k*(l-abs(z)))

print("Ru")
print((Ru).round(2))
print("Rz")
print((Rz).round(2))
print("RiN")
print((RiN).round(2))

print("P*1e8")
print((P*1e8).round(2))
print("Pb*1e8")
print((Pb*1e8).round(2))
print("P*1e8")
print((P*1e8).round(2))
print("Pb*1e8")
print((Pb*1e8).round(2))

print("Ical")
print((abs(Ical)).round(2))
print("Iasm")
print((Iasm).round(2))

figure()
plot(z,abs(Ical),label = "Calculated Current")
plot(z,Iasm,label = "Assumed Current")
xlabel(r"$z$")
ylabel(r"$I$")
legend(loc = 'upper right')
title("Antenna currents at N=100")
grid()
savefig('fig1.png')
show()